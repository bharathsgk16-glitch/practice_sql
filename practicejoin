*JOIN Practice Questions*

### ðŸ”¹ *1. INNER JOIN*

â¿¡ Display all students along with their department names and locations.
â¿¢ Display student names, marks, and department names for only those students who have marks above 80.
â¿£ Display all students who belong to the â€˜ITâ€™ department.
â¿¤ Display student name, branch, department name, and location where studentâ€™s marks are greater than 85.

---

### ðŸ”¹ *2. LEFT JOIN*

â¿¥ Display all students and their department names (including those without a department).
â¿¦ Display the department name even if there are no students assigned to it.
â¿§ Display student names who donâ€™t belong to any department (i.e., department is NULL).

---

### ðŸ”¹ *3. RIGHT JOIN*

â¿¨ Display all departments and the students under them.
â¿© Display department names with students whose marks are less than 90 (include departments with no students).
ðŸ”Ÿ Display all department details even if no student is enrolled.

---

### ðŸ”¹ *4. FULL OUTER JOIN (via UNION)*

1â¿¡ Display all students and all departments â€” include those without matching records on either side.
1â¿¢ Display all student names and department names â€” even if they donâ€™t belong to each other.

---

### ðŸ”¹ *5. CROSS JOIN*

1â¿£ Display all possible combinations of student names and department names.
1â¿¤ Find how many total combinations exist between students and departments.

---

### ðŸ”¹ *6. SELF JOIN*

1â¿¥ Add a mentor_id column to the Student table.
1â¿¦ Display each studentâ€™s name along with their mentorâ€™s name.
1â¿§ Display only those students who have a mentor assigned.
1â¿¨ Display all mentors and the number of studentsÂ theyÂ mentor.
 Anwer-----
 CREATE DATABASE joins_simple;
USE joins_simple;

CREATE TABLE Department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(50),
    location VARCHAR(50)
);
CREATE TABLE Student (
    student_id INT PRIMARY KEY,
    student_name VARCHAR(50),
    age INT,
    branch VARCHAR(30),
    marks DECIMAL(5,2),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES Department(dept_id)
);
INSERT INTO Department VALUES
(1, 'IT', 'Chennai'),
(2, 'CSE', 'Coimbatore'),
(3, 'ECE', 'Bangalore'),
(4, 'EEE', 'Madurai'),
(5, 'MECH', 'Salem'),
(6, 'CIVIL', 'Trichy');

INSERT INTO Student VALUES
(101, 'Logeshwari', 21, 'CSE', 88.50, 2),
(102, 'Dhivya', 20, 'IT', 76.00, 1),
(103, 'Kavin', 22, 'ECE', 65.00, 3),
(104, 'Meena', 21, 'CSE', 91.00, 2),
(105, 'Ragul', 22, 'EEE', 59.00, 4),
(106, 'Saran', 21, 'MECH', 72.00, 5),
(107, 'Deepika', 20, 'IT', 83.00, 1),
(108, 'Praveen', 23, 'ECE', 69.50, 3),
(109, 'Harini', 21, 'CSE', 94.00, 2),
(110, 'Vignesh', 22, 'CIVIL', 68.00, null);
select * from department;
select * from student;
 select s.student_name, d.dept_name,d.location
 from student s
 inner join department d
 on s.dept_id=d.dept_id;
  
  select s.student_name,s.marks,d.dept_name
  from student s
  inner join department d
  on s.dept_id=d.dept_id
  where s.marks>80;
  
  select *
 from student s
 inner join department d
 on s.dept_id=d.dept_id
 where d.dept_name="IT";
 
 select s.student_name,s.branch,d.dept_name,d.location
 from student s
 inner join department d
 on  s.dept_id= d.dept_id
 where s.marks>85;
 
 select s.student_name,d.dept_name
 from student s
 left join department d
 on s.dept_id=d.dept_id;
 
 select d.dept_name,s.student_name
 from student s
 left join department d
 on s.dept_id=d.dept_id;
 select s.student_name
 from student s
 left join department d
 on s.dept_id=d.dept_id
 where d.dept_id is null;
 
 select d.dept_name,s.student_name
 from student s
 right join department d
 on s.dept_id=d.dept_id;
 select d.dept_name,s.student_name,s.mark
 from student s
 right join department d
 on s.dept_id=d.dept_id
 where s.marks<90;
 
select d.*
from student s
 right join department d
 on s.dept_id=d.dept_id;
 
 select *
 from student s
 left join department d
 on s.dept_id=d.dept_id
 union
 select *
 from student s
right join department d
 on s.dept_id=d.dept_id;
 
 select s.student_name,d.dept_name
 from student s
 left join department d
 on s.dept_id=d.dept_id
 union
 select s.student_name,d.dept_name
 from student s
right join department d
 on s.dept_id=d.dept_id;
 
 select s.student_name,d.dept_name
 from student s
cross  join department d;

select count(*)as combination
 from student s
cross  join department d;
---------
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(50),
    designation VARCHAR(50),
    manager_id INT
);
INSERT INTO Employee VALUES
(1, 'Logeshwari', 'CEO', NULL),
(2, 'Dhivya', 'Project Manager', 1),
(3, 'Kavin', 'Team Lead', 2),
(4, 'Meena', 'Developer', 3),
(5, 'Ragul', 'Developer', 3),
(6, 'Saran', 'Tester', 2),
(7, 'Harini', 'HR', 1),
(8, 'Vignesh', 'Intern', 4),
(9, 'Deepika', 'Intern', 5);

select * from  Employee;
select e1.emp_name as student,e2.emp_name
from employee e1
inner join employee e2
on e1.manager_id=e2.emp_id;

select * from  Employee;
select e1.emp_name as student,e2.emp_name
from employee e1
inner join employee e2
on e1.manager_id=e2.emp_id
 where e2.manager_id is not null;
  SET sql_safe_updates=0;
 select e2.emp_name as manager, count(e1.emp_id) as noof
from employee e1
inner join employee e2
on e1.manager_id=e2.emp_id
group by e2.emp_name;

